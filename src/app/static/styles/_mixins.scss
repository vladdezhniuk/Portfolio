/* Mixins allows to define styles that can be re-used throughout stylesheet.
* It makes easy to avoid using non-semantic classes,
* and to distribute collections of styles in libraries. */

/* Mixin for gradual rendering of list items */
@mixin listAnimationDelay($length, $baseDelay, $delayPerItem) {
    @for $i from 1 through $length {
        &:nth-of-type(#{$i}) {
            animation-delay: calc($baseDelay + $i * $delayPerItem);
        }
    }
}

/* Mixin to render overflow animation */
@mixin overflow($ofset, $duration, $delay) {
    position: relative;
    animation: overflow $duration $delay ease-out both;

    @keyframes overflow {

        from {
            clip-path: polygon(0 0, 100% 0, 100% 0%, 0 0%);
            top: $ofset;
        }

        to {
            top: 0;
            clip-path: polygon(0 0, 100% 0, 100% 120%, 0 120%);
        }
    }
}
